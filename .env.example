# 🔑 CREDENCIALES SUPABASE - EJEMPLO

> **⚠️ IMPORTANTE**: Este es un archivo de EJEMPLO  
> Copia este archivo como `.env` y completa con tus credenciales reales

## 🌍 **Variables de Entorno**

```env
# ============================================
# SUPABASE CONFIGURATION  
# ============================================

# Project URL (desde Settings > API)
SUPABASE_URL=https://TU-PROJECT-ID.supabase.co

# Public anon key (desde Settings > API)
SUPABASE_ANON_KEY=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.TU-ANON-KEY-AQUI

# Service role key (⚠️ SOLO PARA DESARROLLO, NUNCA EN FRONTEND)
SUPABASE_SERVICE_ROLE_KEY=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.TU-SERVICE-KEY-AQUI

# Database URL completa (desde Settings > Database)
DATABASE_URL=postgresql://postgres:TU-PASSWORD@db.TU-PROJECT-ID.supabase.co:5432/postgres

# ============================================
# CONFIGURACIÓN DESARROLLO
# ============================================

# URLs permitidas para desarrollo
SITE_URL=http://localhost:5500
REDIRECT_URL=http://localhost:5500/dashboard.html

# Configuración de entorno
NODE_ENV=development
PORT=5500

# ============================================
# DATOS DE PROYECTO
# ============================================

# Info del proyecto
PROJECT_NAME=gestion-financiera-v2
PROJECT_ID=TU-PROJECT-ID
REGION=us-east-1
```

## 📋 **Instrucciones de Setup**

### **1. Obtener Credenciales:**
```
1. Ir a: https://supabase.com/dashboard
2. Seleccionar tu proyecto
3. Ir a: Settings > API  
4. Copiar:
   - Project URL
   - anon public key
   - service_role key (opcional)
```

### **2. Crear Archivo .env:**
```bash
# Copiar este archivo:
cp .env.example .env

# Editar con tus credenciales reales:
# Reemplazar TU-PROJECT-ID con tu ID real
# Reemplazar las keys con las keys reales
```

### **3. Verificar Configuración:**
```javascript
// En console del browser:
const testConfig = () => {
    const url = 'https://TU-PROJECT-ID.supabase.co';
    const key = 'eyJ0eXAiOi...TU-ANON-KEY';
    
    if (url.includes('TU-PROJECT')) {
        console.error('❌ Falta configurar SUPABASE_URL');
        return false;
    }
    
    if (key.includes('TU-ANON')) {
        console.error('❌ Falta configurar SUPABASE_ANON_KEY');
        return false;
    }
    
    console.log('✅ Configuración lista');
    return true;
};

testConfig();
```

## 🔐 **Seguridad**

### **⚠️ NUNCA HACER:**
- ❌ Commitear archivo .env al git
- ❌ Usar service_role key en frontend
- ❌ Compartir credenciales por email/chat
- ❌ Hardcodear keys en el código

### **✅ BUENAS PRÁCTICAS:**
- ✅ Usar .env para desarrollo local
- ✅ Usar variables de entorno en producción
- ✅ Solo usar anon key en frontend
- ✅ Rotar keys periódicamente

## 🧪 **Test de Credenciales**

### **Script de Verificación:**
```javascript
// Copiar y pegar en console del browser:
const validateCredentials = async (url, anonKey) => {
  try {
    // Cargar Supabase client
    const script = document.createElement('script');
    script.src = 'https://unpkg.com/@supabase/supabase-js@2.38.0/dist/umd/supabase.min.js';
    document.head.appendChild(script);
    
    // Esperar carga
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    // Crear client
    const { createClient } = window.supabase;
    const client = createClient(url, anonKey);
    
    // Test básico
    const { data, error } = await client.auth.getSession();
    
    if (error) {
      console.error('❌ Error:', error.message);
      return false;
    }
    
    console.log('✅ Credenciales válidas');
    console.log('📊 Session:', data);
    return true;
    
  } catch (err) {
    console.error('❌ Error de validación:', err);
    return false;
  }
};

// Usar con tus credenciales:
// validateCredentials('https://tu-project-id.supabase.co', 'tu-anon-key');
```

---

## 🎯 **Siguiente Paso**

Una vez configuradas las credenciales:
1. ✅ Verificar que funcionan con el test
2. ✅ Guardar .env en tu directorio raíz
3. ✅ Continuar con **Módulo 2: Base de Datos y Tablas**

---

*Este archivo es parte del Módulo 1: Configuración Base y Autenticación*
