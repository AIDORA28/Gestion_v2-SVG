# ===================================================================
# üîÑ GITHUB ACTIONS - PROCESAMIENTO AUTOM√ÅTICO DE RECURRENCIAS
# ===================================================================
# Descripci√≥n: Se ejecuta autom√°ticamente todos los d√≠as a las 6 AM
# Frecuencia: Diario (0 6 * * *)
# Funcionalidad: Llama a la funci√≥n de Supabase para procesar recurrencias
# ===================================================================

name: üîÑ Procesar Recurrencias Autom√°ticas

# Configurar cu√°ndo se ejecuta
on:
  # Programaci√≥n autom√°tica: todos los d√≠as a las 6:00 AM UTC
  schedule:
    - cron: '0 6 * * *'
  
  # Tambi√©n permitir ejecuci√≥n manual desde GitHub
  workflow_dispatch:
    inputs:
      force_run:
        description: 'Forzar ejecuci√≥n (true/false)'
        required: false
        default: 'false'

# Configuraci√≥n de permisos
permissions:
  contents: read

jobs:
  procesar-recurrencias:
    name: üìä Procesar Ingresos y Gastos Recurrentes
    runs-on: ubuntu-latest
    
    steps:
      # Paso 1: Mostrar informaci√≥n de ejecuci√≥n
      - name: üìã Informaci√≥n de ejecuci√≥n
        run: |
          echo "üïê Fecha y hora de ejecuci√≥n: $(date)"
          echo "üîÑ Iniciando procesamiento de recurrencias..."
          echo "üåç Timezone: UTC"
          echo "üìÖ Cron schedule: 6:00 AM UTC diario"

      # Paso 2: Llamar directamente a Supabase
      - name: üéØ Ejecutar funci√≥n de recurrencias en Supabase
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
        run: |
          echo "üîó Conectando con Supabase..."
          
          # Llamar directamente a la funci√≥n RPC de Supabase
          response=$(curl -s -w "\n%{http_code}" \
            -X POST "$SUPABASE_URL/rest/v1/rpc/procesar_todas_recurrencias" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $SUPABASE_SERVICE_KEY" \
            -H "apikey: $SUPABASE_SERVICE_KEY" \
            -d '{}')
          
          # Separar respuesta y c√≥digo HTTP
          http_code=$(echo "$response" | tail -n1)
          response_body=$(echo "$response" | head -n -1)
          
          echo "üìä C√≥digo de respuesta: $http_code"
          echo "üìÑ Respuesta completa: $response_body"
          
          # Verificar si fue exitoso
          if [ "$http_code" -eq 200 ]; then
            echo "‚úÖ Recurrencias procesadas exitosamente"
            
            # Extraer informaci√≥n del JSON (si est√° disponible)
            if command -v jq &> /dev/null; then
              procesados=$(echo "$response_body" | jq -r '.total_procesados // "N/A"')
              errores=$(echo "$response_body" | jq -r '.total_errores // "N/A"')
              echo "üìà Transacciones procesadas: $procesados"
              echo "‚ùå Errores encontrados: $errores"
            fi
          else
            echo "‚ö†Ô∏è Error en el procesamiento (HTTP $http_code)"
            echo "üîç Respuesta del servidor: $response_body"
            exit 1
          fi

      # Paso 3: Notificaci√≥n de finalizaci√≥n
      - name: üéâ Finalizaci√≥n
        if: always()
        run: |
          echo "üèÅ Procesamiento de recurrencias completado"
          echo "‚è∞ Pr√≥xima ejecuci√≥n programada: Ma√±ana a las 6:00 AM UTC"
          echo "üîß Para ejecutar manualmente: GitHub ‚Üí Actions ‚Üí 'Procesar Recurrencias' ‚Üí 'Run workflow'"

      # Paso 4: Crear summary (opcional)
      - name: üìä Crear resumen
        if: always()
        run: |
          echo "## üîÑ Resumen de Procesamiento de Recurrencias" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Fecha:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "- **Estado:** ‚úÖ Completado" >> $GITHUB_STEP_SUMMARY
          echo "- **Pr√≥xima ejecuci√≥n:** Ma√±ana a las 6:00 AM UTC" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üîß Configuraci√≥n:" >> $GITHUB_STEP_SUMMARY
          echo "- Funci√≥n SQL: \`procesar_todas_recurrencias()\`" >> $GITHUB_STEP_SUMMARY
          echo "- Base de datos: Supabase" >> $GITHUB_STEP_SUMMARY
          echo "- Frecuencia: Diaria (6:00 AM UTC)" >> $GITHUB_STEP_SUMMARY

# ===================================================================
# üìù NOTAS IMPORTANTES:
# ===================================================================
# 1. Configurar secretos en GitHub:
#    - SUPABASE_URL: https://tu-proyecto.supabase.co
#    - SUPABASE_SERVICE_KEY: tu-service-role-key
#
# 2. Horarios:
#    - 6:00 AM UTC = 1:00 AM Per√∫ (horario de verano)
#    - 6:00 AM UTC = 2:00 AM Per√∫ (horario est√°ndar)
#
# 3. Para cambiar horario, modificar cron expression:
#    - '0 11 * * *' = 6:00 AM Per√∫
#    - '0 6 * * *'  = 1:00 AM Per√∫
#
# 4. Ejecuci√≥n manual:
#    - GitHub ‚Üí Actions ‚Üí "Procesar Recurrencias" ‚Üí "Run workflow"
# ===================================================================
